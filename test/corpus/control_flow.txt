===================
If-else expressions
===================

if (a == b) {
  return 10;
};

if (c != 4) {
  return 0;
} else {
  return 1;
};

-------------------

(source_file
  (expression_statement
    (if_expression
      (binary_expression
        (identifier)
        (identifier))
      (statement_block
        (return_statement
          (literal
            (number))))))
  (expression_statement
    (if_expression
      (binary_expression
        (identifier)
        (literal
          (number)))
      (statement_block
        (return_statement
          (literal
            (number))))
      (statement_block
        (return_statement
          (literal
            (number)))))))

===================
If-else-if expression
===================

if (a == 'y') {
  return 1;
} else if (a == 'n') {
  return 0;
} else {
  return -1;
};

if (a == 'y') {
  return 1;
} else {
  if (a == 'n') {
    return 0;
  } else {
    return -1;
  };
};
-------------------

(source_file
  (expression_statement
    (if_expression
      (binary_expression
        (identifier)
        (literal
          (string
            (string_fragment))))
      (statement_block
        (return_statement
          (literal
            (number))))
      (if_expression
        (binary_expression
          (identifier)
          (literal
            (string
              (string_fragment))))
        (statement_block
          (return_statement
            (literal
              (number))))
        (statement_block
          (return_statement
            (unary_expression
              (literal
                (number))))))))
  (expression_statement
    (if_expression
      (binary_expression
        (identifier)
        (literal
          (string
            (string_fragment))))
      (statement_block
        (return_statement
          (literal
            (number))))
      (statement_block
        (expression_statement
          (if_expression
            (binary_expression
              (identifier)
              (literal
                (string
                  (string_fragment))))
            (statement_block
              (return_statement
                (literal
                  (number))))
            (statement_block
              (return_statement
                (unary_expression
                  (literal
                    (number)))))))))))

===================
For-in loop
===================

for name in names {
  print(name);
};

-------------------

(source_file
  (expression_statement
    (for_expression
      (identifier)
      (identifier)
      (statement_block
        (expression_statement
          (call_expression
            (identifier)
            (arguments
              (identifier))))))))
